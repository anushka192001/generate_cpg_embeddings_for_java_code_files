digraph 3000_before_AST {
  // graph-vertices
  n1  [label="ROOT: 3000_before.java"];
  n2  [label="CLASS"];
  n3  [label="MODIFIER: public"];
  n4  [label="NAME: Onitemclick"];
  n5  [label="METHOD"];
  n6  [label="MODIFIER: @java.lang.Override public"];
  n7  [label="RETURN: void"];
  n8  [label="NAME: onItemClick"];
  n9  [label="PARAMS"];
  n10  [label="VAR"];
  n11  [label="TYPE: android.widget.AdapterView<?>"];
  n12  [label="NAME: parent"];
  n13  [label="VAR"];
  n14  [label="TYPE: android.view.View"];
  n15  [label="NAME: view"];
  n16  [label="VAR"];
  n17  [label="TYPE: int"];
  n18  [label="NAME: position"];
  n19  [label="VAR"];
  n20  [label="TYPE: long"];
  n21  [label="NAME: id"];
  n22  [label="BLOCK"];
  n23  [label="VAR"];
  n24  [label="TYPE: android.content.res.Resources"];
  n25  [label="NAME: res"];
  n26  [label="INIT: = getResources()"];
  n27  [label="VAR"];
  n28  [label="TYPE: java.lang.Object"];
  n29  [label="NAME: obj"];
  n30  [label="INIT: = getSharedDeckFromList(position)"];
  n31  [label="IF"];
  n32  [label="COND: obj instanceof com.ichi2.anki.SharedDeck"];
  n33  [label="THEN"];
  n34  [label="VAR"];
  n35  [label="TYPE: com.ichi2.anki.SharedDeck"];
  n36  [label="NAME: selectedDeck"];
  n37  [label="INIT: = ((com.ichi2.anki.SharedDeck) (obj))"];
  n38  [label="FOR-EACH"];
  n39  [label="TYPE: com.ichi2.anki.Download"];
  n40  [label="NAME: d"];
  n41  [label="IN: mSharedDeckDownloads"];
  n42  [label="BLOCK"];
  n43  [label="IF"];
  n44  [label="COND: d.getTitle().equals(selectedDeck.getTitle())"];
  n45  [label="THEN"];
  n46  [label="VAR"];
  n47  [label="TYPE: android.widget.Toast"];
  n48  [label="NAME: duplicateMessage"];
  n49  [label="INIT: = android.widget.Toast.makeText(this, res.getString(R.string.duplicate_download), Toast.LENGTH_SHORT)"];
  n50  [label="11:  duplicateMessage.show()"];
  n51  [label="12:  return ;"];
  n52  [label="VAR"];
  n53  [label="TYPE: com.ichi2.anki.SharedDeckDownload"];
  n54  [label="NAME: sharedDeckDownload"];
  n55  [label="INIT: = new com.ichi2.anki.SharedDeckDownload(selectedDeck.getId(), selectedDeck.getTitle())"];
  n56  [label="16:  sharedDeckDownload.setSize(selectedDeck.getSize())"];
  n57  [label="17:  mSharedDeckDownloads.add(sharedDeckDownload)"];
  n58  [label="18:  refreshSharedDecksList()"];
  n59  [label="TRY"];
  n60  [label="BLOCK"];
  n61  [label="20:  startService(mDownloadManagerServiceIntent)"];
  n62  [label="21:  mDownloadManagerService.downloadFile(sharedDeckDownload)"];
  n63  [label="CATCH"];
  n64  [label="TYPE: android.os.RemoteException"];
  n65  [label="NAME: e"];
  n66  [label="BLOCK"];
  n67  [label="23:  android.util.Log.e(AnkiDroidApp.TAG, ('RemoteException = ' + (e.getMessage())))"];
  n68  [label="24:  e.printStackTrace()"];
  // graph-edges
  n1 -> n2;
  n2 -> n3;
  n2 -> n4;
  n2 -> n5;
  n5 -> n6;
  n5 -> n7;
  n5 -> n8;
  n5 -> n9;
  n9 -> n10;
  n10 -> n11;
  n10 -> n12;
  n9 -> n13;
  n13 -> n14;
  n13 -> n15;
  n9 -> n16;
  n16 -> n17;
  n16 -> n18;
  n9 -> n19;
  n19 -> n20;
  n19 -> n21;
  n5 -> n22;
  n22 -> n23;
  n23 -> n24;
  n23 -> n25;
  n23 -> n26;
  n22 -> n27;
  n27 -> n28;
  n27 -> n29;
  n27 -> n30;
  n22 -> n31;
  n31 -> n32;
  n31 -> n33;
  n33 -> n34;
  n34 -> n35;
  n34 -> n36;
  n34 -> n37;
  n33 -> n38;
  n38 -> n39;
  n38 -> n40;
  n38 -> n41;
  n38 -> n42;
  n42 -> n43;
  n43 -> n44;
  n43 -> n45;
  n45 -> n46;
  n46 -> n47;
  n46 -> n48;
  n46 -> n49;
  n45 -> n50;
  n45 -> n51;
  n33 -> n52;
  n52 -> n53;
  n52 -> n54;
  n52 -> n55;
  n33 -> n56;
  n33 -> n57;
  n33 -> n58;
  n33 -> n59;
  n59 -> n60;
  n60 -> n61;
  n60 -> n62;
  n59 -> n63;
  n63 -> n64;
  n63 -> n65;
  n63 -> n66;
  n66 -> n67;
  n66 -> n68;
  // end-of-graph
}
