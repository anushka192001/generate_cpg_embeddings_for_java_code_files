digraph 1411_before_AST {
  // graph-vertices
  n1  [label="ROOT: 1411_before.java"];
  n2  [label="CLASS"];
  n3  [label="MODIFIER: public"];
  n4  [label="NAME: Getstartandenddays"];
  n5  [label="METHOD"];
  n6  [label="MODIFIER: public"];
  n7  [label="RETURN: void"];
  n8  [label="NAME: getStartAndEndDays"];
  n9  [label="BLOCK"];
  n10  [label="3:  debug(originalOutput)"];
  n11  [label="VAR"];
  n12  [label="TYPE: int"];
  n13  [label="NAME: start"];
  n14  [label="INIT: = originalOutput.indexOf('this/day={D')"];
  n15  [label="VAR"];
  n16  [label="TYPE: int"];
  n17  [label="NAME: end"];
  n18  [label="INIT: = originalOutput.indexOf('$0}', start)"];
  n19  [label="VAR"];
  n20  [label="TYPE: boolean"];
  n21  [label="NAME: startSet"];
  n22  [label="INIT: = false"];
  n23  [label="VAR"];
  n24  [label="TYPE: java.util.StringTokenizer"];
  n25  [label="NAME: parts"];
  n26  [label="INIT: = new java.util.StringTokenizer('')"];
  n27  [label="TRY"];
  n28  [label="BLOCK"];
  n29  [label="9:  parts = new java.util.StringTokenizer(originalOutput.substring(start, end), '{,')"];
  n30  [label="CATCH"];
  n31  [label="TYPE: java.lang.Exception"];
  n32  [label="NAME: e"];
  n33  [label="BLOCK"];
  n34  [label="11:  debug('Could not start processing start and end dates from original output')"];
  n35  [label="WHILE"];
  n36  [label="COND: parts.hasMoreTokens()"];
  n37  [label="BLOCK"];
  n38  [label="VAR"];
  n39  [label="TYPE: java.util.StringTokenizer"];
  n40  [label="NAME: st"];
  n41  [label="INIT: = new java.util.StringTokenizer(parts.nextToken(), 'D$')"];
  n42  [label="VAR"];
  n43  [label="TYPE: java.lang.String"];
  n44  [label="NAME: lastToken"];
  n45  [label="INIT: = new java.lang.String()"];
  n46  [label="WHILE"];
  n47  [label="COND: st.hasMoreTokens()"];
  n48  [label="BLOCK"];
  n49  [label="17:  lastToken = st.nextToken()"];
  n50  [label="IF"];
  n51  [label="COND: !startSet"];
  n52  [label="THEN"];
  n53  [label="TRY"];
  n54  [label="BLOCK"];
  n55  [label="20:  startDay = java.lang.Integer.parseInt(lastToken)"];
  n56  [label="21:  startSet = true"];
  n57  [label="CATCH"];
  n58  [label="TYPE: java.lang.Exception"];
  n59  [label="NAME: e"];
  n60  [label="BLOCK"];
  n61  [label="23:  debug('Couldn't parse start and end date from output.')"];
  n62  [label="TRY"];
  n63  [label="BLOCK"];
  n64  [label="28:  endDay = java.lang.Integer.parseInt(lastToken)"];
  n65  [label="CATCH"];
  n66  [label="TYPE: java.lang.Exception"];
  n67  [label="NAME: e"];
  n68  [label="BLOCK"];
  n69  [label="30:  debug('Couldn't parse start and end date from output.')"];
  n70  [label="33:  debug(((('The start day is: ' + start) + ' The end day is: ') + end))"];
  // graph-edges
  n1 -> n2;
  n2 -> n3;
  n2 -> n4;
  n2 -> n5;
  n5 -> n6;
  n5 -> n7;
  n5 -> n8;
  n5 -> n9;
  n9 -> n10;
  n9 -> n11;
  n11 -> n12;
  n11 -> n13;
  n11 -> n14;
  n9 -> n15;
  n15 -> n16;
  n15 -> n17;
  n15 -> n18;
  n9 -> n19;
  n19 -> n20;
  n19 -> n21;
  n19 -> n22;
  n9 -> n23;
  n23 -> n24;
  n23 -> n25;
  n23 -> n26;
  n9 -> n27;
  n27 -> n28;
  n28 -> n29;
  n27 -> n30;
  n30 -> n31;
  n30 -> n32;
  n30 -> n33;
  n33 -> n34;
  n9 -> n35;
  n35 -> n36;
  n35 -> n37;
  n37 -> n38;
  n38 -> n39;
  n38 -> n40;
  n38 -> n41;
  n37 -> n42;
  n42 -> n43;
  n42 -> n44;
  n42 -> n45;
  n37 -> n46;
  n46 -> n47;
  n46 -> n48;
  n48 -> n49;
  n48 -> n50;
  n50 -> n51;
  n50 -> n52;
  n52 -> n53;
  n53 -> n54;
  n54 -> n55;
  n54 -> n56;
  n53 -> n57;
  n57 -> n58;
  n57 -> n59;
  n57 -> n60;
  n60 -> n61;
  n37 -> n62;
  n62 -> n63;
  n63 -> n64;
  n62 -> n65;
  n65 -> n66;
  n65 -> n67;
  n65 -> n68;
  n68 -> n69;
  n9 -> n70;
  // end-of-graph
}
