digraph 5195_before_PDG_DATA {
  // graph-vertices
  v1  [label="2:  void handleInboundBlockwiseUpload(final org.eclipse.californium.core.network.Exchange exchange, final org.eclipse.californium.core.coap.Request request)"];
  v2  [label="3:  if (requestExceedsMaxBodySize(request))"];
  v3  [label="4:  org.eclipse.californium.core.coap.Response error = org.eclipse.californium.core.coap.Response.createResponse(request, ResponseCode.REQUEST_ENTITY_TOO_LARGE)"];
  v4  [label="5:  error.setPayload(java.lang.String.format('body too large, can process %d bytes max', maxResourceBodySize))"];
  v5  [label="6:  error.getOptions().setSize1(maxResourceBodySize)"];
  v6  [label="7:  exchange.setCurrentResponse(error)"];
  v7  [label="8:  lower().sendResponse(exchange, error)"];
  v8  [label="endif"];
  v9  [label="10:  org.eclipse.californium.core.coap.BlockOption block1 = request.getOptions().getBlock1()"];
  v10  [label="11:  org.eclipse.californium.core.network.stack.BlockwiseLayer.LOGGER.log(java.util.logging.Level.FINE, 'inbound request contains block1 option {0}', block1)"];
  v11  [label="12:  org.eclipse.californium.core.network.stack.KeyUri key = org.eclipse.californium.core.network.stack.BlockwiseLayer.getKey(exchange, request)"];
  v12  [label="13:  org.eclipse.californium.core.network.stack.Block1BlockwiseStatus status = getInboundBlock1Status(key, exchange, request)"];
  v13  [label="14:  if (((block1.getNum()) == 0) && ((status.getCurrentNum()) > 0))"];
  v14  [label="15:  status = resetInboundBlock1Status(key, exchange, request)"];
  v15  [label="endif"];
  v16  [label="17:  if ((block1.getNum()) != (status.getCurrentNum()))"];
  v17  [label="18:  org.eclipse.californium.core.network.stack.BlockwiseLayer.LOGGER.log(java.util.logging.Level.WARNING, 'peer sent wrong block, expected no. {0} but got {1}. Responding with 4.08 (Request Entity Incomplete)', new java.lang.Object[]{ status.getCurrentNum() , block1.getNum() })"];
  v18  [label="19:  sendBlock1ErrorResponse(key, exchange, request, ResponseCode.REQUEST_ENTITY_INCOMPLETE, 'wrong block number')"];
  v19  [label="endif"];
  v20  [label="21:  if (!(status.hasContentFormat(request.getOptions().getContentFormat())))"];
  v21  [label="22:  sendBlock1ErrorResponse(key, exchange, request, ResponseCode.REQUEST_ENTITY_INCOMPLETE, 'unexpected Content-Format')"];
  v22  [label="endif"];
  v23  [label="24:  if (!(status.addBlock(request.getPayload())))"];
  v24  [label="25:  sendBlock1ErrorResponse(key, exchange, request, ResponseCode.REQUEST_ENTITY_TOO_LARGE, ('body exceeded expected size ' + (status.getBufferSize())))"];
  v25  [label="endif"];
  v26  [label="27:  status.setCurrentNum(((status.getCurrentNum()) + 1))"];
  v27  [label="28:  if (block1.isM())"];
  v28  [label="29:  org.eclipse.californium.core.network.stack.BlockwiseLayer.LOGGER.log(java.util.logging.Level.FINE, 'acknowledging incoming block1 [num={0}], expecting more blocks to come', block1.getNum())"];
  v29  [label="30:  org.eclipse.californium.core.coap.Response piggybacked = org.eclipse.californium.core.coap.Response.createResponse(request, ResponseCode.CONTINUE)"];
  v30  [label="31:  piggybacked.getOptions().setBlock1(block1.getSzx(), true, block1.getNum())"];
  v31  [label="32:  piggybacked.setLast(false)"];
  v32  [label="33:  exchange.setCurrentResponse(piggybacked)"];
  v33  [label="34:  lower().sendResponse(exchange, piggybacked)"];
  v34  [label="endif"];
  v35  [label="36:  org.eclipse.californium.core.network.stack.BlockwiseLayer.LOGGER.log(java.util.logging.Level.FINE, 'peer has sent last block1 [num={0}], delivering request to application layer', block1.getNum())"];
  v36  [label="37:  exchange.setBlock1ToAck(block1)"];
  v37  [label="38:  org.eclipse.californium.core.coap.Request assembled = new org.eclipse.californium.core.coap.Request(request.getCode())"];
  v38  [label="39:  assembled.setSenderIdentity(request.getSenderIdentity())"];
  v39  [label="40:  status.assembleMessage(assembled)"];
  v40  [label="41:  assembled.setMID(request.getMID())"];
  v41  [label="42:  assembled.setToken(request.getToken())"];
  v42  [label="43:  assembled.getOptions().setBlock2(request.getOptions().getBlock2())"];
  v43  [label="44:  clearBlock1Status(key)"];
  v44  [label="45:  exchange.setRequest(assembled)"];
  v45  [label="46:  upper().receiveRequest(exchange, assembled)"];
  // graph-edges
  v1 -> v2  [arrowhead=empty, color=gray, style=dashed, label=""];
  v2 -> v3  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v3 -> v4  [arrowhead=empty, color=gray, style=dashed, label=""];
  v4 -> v5  [arrowhead=empty, color=gray, style=dashed, label=""];
  v5 -> v6  [arrowhead=empty, color=gray, style=dashed, label=""];
  v6 -> v7  [arrowhead=empty, color=gray, style=dashed, label=""];
  v7 -> v8  [arrowhead=empty, color=gray, style=dashed, label=""];
  v2 -> v9  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v9 -> v10  [arrowhead=empty, color=gray, style=dashed, label=""];
  v10 -> v11  [arrowhead=empty, color=gray, style=dashed, label=""];
  v11 -> v12  [arrowhead=empty, color=gray, style=dashed, label=""];
  v12 -> v13  [arrowhead=empty, color=gray, style=dashed, label=""];
  v13 -> v14  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v14 -> v15  [arrowhead=empty, color=gray, style=dashed, label=""];
  v13 -> v15  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v15 -> v16  [arrowhead=empty, color=gray, style=dashed, label=""];
  v16 -> v17  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v17 -> v18  [arrowhead=empty, color=gray, style=dashed, label=""];
  v18 -> v19  [arrowhead=empty, color=gray, style=dashed, label=""];
  v16 -> v20  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v20 -> v21  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v21 -> v22  [arrowhead=empty, color=gray, style=dashed, label=""];
  v20 -> v23  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v23 -> v24  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v24 -> v25  [arrowhead=empty, color=gray, style=dashed, label=""];
  v23 -> v26  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v26 -> v27  [arrowhead=empty, color=gray, style=dashed, label=""];
  v27 -> v28  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v28 -> v29  [arrowhead=empty, color=gray, style=dashed, label=""];
  v29 -> v30  [arrowhead=empty, color=gray, style=dashed, label=""];
  v30 -> v31  [arrowhead=empty, color=gray, style=dashed, label=""];
  v31 -> v32  [arrowhead=empty, color=gray, style=dashed, label=""];
  v32 -> v33  [arrowhead=empty, color=gray, style=dashed, label=""];
  v33 -> v34  [arrowhead=empty, color=gray, style=dashed, label=""];
  v27 -> v35  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v35 -> v36  [arrowhead=empty, color=gray, style=dashed, label=""];
  v36 -> v37  [arrowhead=empty, color=gray, style=dashed, label=""];
  v37 -> v38  [arrowhead=empty, color=gray, style=dashed, label=""];
  v38 -> v39  [arrowhead=empty, color=gray, style=dashed, label=""];
  v39 -> v40  [arrowhead=empty, color=gray, style=dashed, label=""];
  v40 -> v41  [arrowhead=empty, color=gray, style=dashed, label=""];
  v41 -> v42  [arrowhead=empty, color=gray, style=dashed, label=""];
  v42 -> v43  [arrowhead=empty, color=gray, style=dashed, label=""];
  v43 -> v44  [arrowhead=empty, color=gray, style=dashed, label=""];
  v44 -> v45  [arrowhead=empty, color=gray, style=dashed, label=""];
  v45 -> v34  [arrowhead=empty, color=gray, style=dashed, label=""];
  v34 -> v25  [arrowhead=empty, color=gray, style=dashed, label=""];
  v25 -> v22  [arrowhead=empty, color=gray, style=dashed, label=""];
  v22 -> v19  [arrowhead=empty, color=gray, style=dashed, label=""];
  v19 -> v8  [arrowhead=empty, color=gray, style=dashed, label=""];
   v1 -> v2   [style=bold, label=" (request)"];
   v1 -> v9   [style=bold, label=" (request)"];
   v1 -> v11   [style=bold, label=" (request)"];
   v1 -> v12   [style=bold, label=" (request)"];
   v1 -> v20   [style=bold, label=" (request)"];
   v1 -> v23   [style=bold, label=" (request)"];
   v1 -> v37   [style=bold, label=" (request)"];
   v1 -> v38   [style=bold, label=" (request)"];
   v1 -> v40   [style=bold, label=" (request)"];
   v1 -> v41   [style=bold, label=" (request)"];
   v1 -> v42   [style=bold, label=" (request)"];
   v1 -> v29   [style=bold, label=" (request)"];
   v1 -> v24   [style=bold, label=" (request)"];
   v1 -> v21   [style=bold, label=" (request)"];
   v1 -> v18   [style=bold, label=" (request)"];
   v1 -> v14   [style=bold, label=" (request)"];
   v1 -> v3   [style=bold, label=" (request)"];
   v1 -> v11   [style=bold, label=" (exchange)"];
   v1 -> v12   [style=bold, label=" (exchange)"];
   v1 -> v36   [style=bold, label=" (exchange)"];
   v1 -> v44   [style=bold, label=" (exchange)"];
   v1 -> v45   [style=bold, label=" (exchange)"];
   v1 -> v32   [style=bold, label=" (exchange)"];
   v1 -> v33   [style=bold, label=" (exchange)"];
   v1 -> v24   [style=bold, label=" (exchange)"];
   v1 -> v21   [style=bold, label=" (exchange)"];
   v1 -> v18   [style=bold, label=" (exchange)"];
   v1 -> v14   [style=bold, label=" (exchange)"];
   v1 -> v6   [style=bold, label=" (exchange)"];
   v1 -> v7   [style=bold, label=" (exchange)"];
   v9 -> v10   [style=bold, label=" (block1)"];
   v9 -> v13   [style=bold, label=" (block1)"];
   v9 -> v16   [style=bold, label=" (block1)"];
   v9 -> v27   [style=bold, label=" (block1)"];
   v9 -> v35   [style=bold, label=" (block1)"];
   v9 -> v36   [style=bold, label=" (block1)"];
   v9 -> v28   [style=bold, label=" (block1)"];
   v9 -> v30   [style=bold, label=" (block1)"];
   v9 -> v17   [style=bold, label=" (block1)"];
   v11 -> v12   [style=bold, label=" (key)"];
   v11 -> v43   [style=bold, label=" (key)"];
   v11 -> v24   [style=bold, label=" (key)"];
   v11 -> v21   [style=bold, label=" (key)"];
   v11 -> v18   [style=bold, label=" (key)"];
   v11 -> v14   [style=bold, label=" (key)"];
   v12 -> v13   [style=bold, label=" (status)"];
   v12 -> v16   [style=bold, label=" (status)"];
   v12 -> v20   [style=bold, label=" (status)"];
   v12 -> v23   [style=bold, label=" (status)"];
   v12 -> v26   [style=bold, label=" (status)"];
   v12 -> v39   [style=bold, label=" (status)"];
   v12 -> v24   [style=bold, label=" (status)"];
   v12 -> v17   [style=bold, label=" (status)"];
   v37 -> v38   [style=bold, label=" (assembled)"];
   v37 -> v39   [style=bold, label=" (assembled)"];
   v37 -> v40   [style=bold, label=" (assembled)"];
   v37 -> v41   [style=bold, label=" (assembled)"];
   v37 -> v42   [style=bold, label=" (assembled)"];
   v37 -> v44   [style=bold, label=" (assembled)"];
   v37 -> v45   [style=bold, label=" (assembled)"];
   v29 -> v30   [style=bold, label=" (piggybacked)"];
   v29 -> v31   [style=bold, label=" (piggybacked)"];
   v29 -> v32   [style=bold, label=" (piggybacked)"];
   v29 -> v33   [style=bold, label=" (piggybacked)"];
   v14 -> v16   [style=bold, label=" (status)"];
   v14 -> v20   [style=bold, label=" (status)"];
   v14 -> v23   [style=bold, label=" (status)"];
   v14 -> v26   [style=bold, label=" (status)"];
   v14 -> v39   [style=bold, label=" (status)"];
   v14 -> v24   [style=bold, label=" (status)"];
   v14 -> v17   [style=bold, label=" (status)"];
   v3 -> v4   [style=bold, label=" (error)"];
   v3 -> v5   [style=bold, label=" (error)"];
   v3 -> v6   [style=bold, label=" (error)"];
   v3 -> v7   [style=bold, label=" (error)"];
  // end-of-graph
}
