digraph 3003_before_AST {
  // graph-vertices
  n1  [label="ROOT: 3003_before.java"];
  n2  [label="CLASS"];
  n3  [label="MODIFIER: public"];
  n4  [label="NAME: Ontouchevent"];
  n5  [label="METHOD"];
  n6  [label="MODIFIER: @java.lang.Override public"];
  n7  [label="RETURN: boolean"];
  n8  [label="NAME: onTouchEvent"];
  n9  [label="PARAMS"];
  n10  [label="VAR"];
  n11  [label="TYPE: android.view.MotionEvent"];
  n12  [label="NAME: event"];
  n13  [label="BLOCK"];
  n14  [label="IF"];
  n15  [label="COND: (event.getAction()) == (android.view.MotionEvent.ACTION_DOWN)"];
  n16  [label="THEN"];
  n17  [label="IF"];
  n18  [label="COND: !(inGame)"];
  n19  [label="THEN"];
  n20  [label="6:  finish()"];
  n21  [label="ELSE"];
  n22  [label="IF"];
  n23  [label="COND: (game.isPlayer1Turn()) || (!(game.isAgainstComputer()))"];
  n24  [label="THEN"];
  n25  [label="VAR"];
  n26  [label="TYPE: int"];
  n27  [label="NAME: bit"];
  n28  [label="INIT: = touchToBit(((int) (event.getX())), ((int) (event.getY())))"];
  n29  [label="VAR"];
  n30  [label="TYPE: com.example.stuart.draughts.Board"];
  n31  [label="NAME: newBoard"];
  n32  [label="INIT: = userInput(bit)"];
  n33  [label="IF"];
  n34  [label="COND: newBoard != null"];
  n35  [label="THEN"];
  n36  [label="12:  game.setCurrentBoard(newBoard, highlighted)"];
  n37  [label="14:  removeViews()"];
  n38  [label="IF"];
  n39  [label="COND: (game.getLegalMoves().length) == 0"];
  n40  [label="THEN"];
  n41  [label="16:  inGame = false"];
  n42  [label="17:  gameOverMessage.setId(R.id.gameOverMessage)"];
  n43  [label="IF"];
  n44  [label="COND: (game.isAgainstComputer()) && (game.isPlayer1Turn())"];
  n45  [label="THEN"];
  n46  [label="19:  gameOverMessage.setText(R.string.youLost)"];
  n47  [label="20:  gameOverMessage.setTextColor(android.support.v4.content.ContextCompat.getColor(getApplicationContext(), R.color.loseColour))"];
  n48  [label="ELSE"];
  n49  [label="22:  gameOverMessage.setTextColor(android.support.v4.content.ContextCompat.getColor(getApplicationContext(), R.color.winColour))"];
  n50  [label="IF"];
  n51  [label="COND: (game.isAgainstComputer()) && (!(game.isPlayer1Turn()))"];
  n52  [label="THEN"];
  n53  [label="24:  gameOverMessage.setText(R.string.youWon)"];
  n54  [label="ELSE"];
  n55  [label="IF"];
  n56  [label="COND: game.isPlayer1Turn()"];
  n57  [label="THEN"];
  n58  [label="27:  gameOverMessage.setText(R.string.player2Won)"];
  n59  [label="ELSE"];
  n60  [label="29:  gameOverMessage.setText(R.string.player1Won)"];
  n61  [label="33:  layout.addView(gameOverMessage)"];
  n62  [label="34:  setContentView(layout)"];
  n63  [label="ELSE"];
  n64  [label="36:  addCounterViews()"];
  n65  [label="IF"];
  n66  [label="COND: game.isPlayer1Turn()"];
  n67  [label="THEN"];
  n68  [label="38:  player1Label.setTextColor(android.support.v4.content.ContextCompat.getColor(getApplicationContext(), R.color.yourTurn))"];
  n69  [label="39:  player1Label.setTextSize(50)"];
  n70  [label="40:  player2Label.setTextColor(android.support.v4.content.ContextCompat.getColor(getApplicationContext(), R.color.notYourTurn))"];
  n71  [label="41:  player2Label.setTextSize(30)"];
  n72  [label="ELSE"];
  n73  [label="43:  player2Label.setTextColor(android.support.v4.content.ContextCompat.getColor(getApplicationContext(), R.color.yourTurn))"];
  n74  [label="44:  player2Label.setTextSize(50)"];
  n75  [label="45:  player1Label.setTextColor(android.support.v4.content.ContextCompat.getColor(getApplicationContext(), R.color.notYourTurn))"];
  n76  [label="46:  player1Label.setTextSize(30)"];
  n77  [label="48:  setContentView(layout)"];
  n78  [label="IF"];
  n79  [label="COND: (!(game.isPlayer1Turn())) && (game.isAgainstComputer())"];
  n80  [label="THEN"];
  n81  [label="VAR"];
  n82  [label="TYPE: java.lang.Runnable"];
  n83  [label="NAME: runnable"];
  n84  [label="METHOD"];
  n85  [label="MODIFIER: public"];
  n86  [label="RETURN: void"];
  n87  [label="NAME: run"];
  n88  [label="BLOCK"];
  n89  [label="52:  game.setCurrentBoard(minimax(game.getCurrentBoard(), (!(game.isPlayer1Black())), 13, game.isOptionalCapture()), highlighted)"];
  n90  [label="INIT: = new java.lang.Runnable() { public void run() { game.setCurrentBoard(minimax(game.getCurrentBoard(), (!(game.isPlayer1Black())), 13, game.isOptionalCapture()), highlighted); } }"];
  n91  [label="55:  myThread = new java.lang.Thread(runnable)"];
  n92  [label="56:  myThread.start()"];
  n93  [label="62:  return super.onTouchEvent(event);"];
  // graph-edges
  n1 -> n2;
  n2 -> n3;
  n2 -> n4;
  n2 -> n5;
  n5 -> n6;
  n5 -> n7;
  n5 -> n8;
  n5 -> n9;
  n9 -> n10;
  n10 -> n11;
  n10 -> n12;
  n5 -> n13;
  n13 -> n14;
  n14 -> n15;
  n14 -> n16;
  n16 -> n17;
  n17 -> n18;
  n17 -> n19;
  n19 -> n20;
  n17 -> n21;
  n21 -> n22;
  n22 -> n23;
  n22 -> n24;
  n24 -> n25;
  n25 -> n26;
  n25 -> n27;
  n25 -> n28;
  n24 -> n29;
  n29 -> n30;
  n29 -> n31;
  n29 -> n32;
  n24 -> n33;
  n33 -> n34;
  n33 -> n35;
  n35 -> n36;
  n24 -> n37;
  n24 -> n38;
  n38 -> n39;
  n38 -> n40;
  n40 -> n41;
  n40 -> n42;
  n40 -> n43;
  n43 -> n44;
  n43 -> n45;
  n45 -> n46;
  n45 -> n47;
  n43 -> n48;
  n48 -> n49;
  n48 -> n50;
  n50 -> n51;
  n50 -> n52;
  n52 -> n53;
  n50 -> n54;
  n54 -> n55;
  n55 -> n56;
  n55 -> n57;
  n57 -> n58;
  n55 -> n59;
  n59 -> n60;
  n40 -> n61;
  n40 -> n62;
  n38 -> n63;
  n63 -> n64;
  n63 -> n65;
  n65 -> n66;
  n65 -> n67;
  n67 -> n68;
  n67 -> n69;
  n67 -> n70;
  n67 -> n71;
  n65 -> n72;
  n72 -> n73;
  n72 -> n74;
  n72 -> n75;
  n72 -> n76;
  n63 -> n77;
  n63 -> n78;
  n78 -> n79;
  n78 -> n80;
  n80 -> n81;
  n81 -> n82;
  n81 -> n83;
  n80 -> n84;
  n84 -> n85;
  n84 -> n86;
  n84 -> n87;
  n84 -> n88;
  n88 -> n89;
  n81 -> n90;
  n80 -> n91;
  n80 -> n92;
  n13 -> n93;
  // end-of-graph
}
