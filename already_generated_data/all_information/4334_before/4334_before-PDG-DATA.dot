digraph 4334_before_PDG_DATA {
  // graph-vertices
  v1  [label="2:  long selectAndRespondToFastestAnswer()"];
  v2  [label="3:  android.util.Log.d(com.seniordesign.wolfpack.quizinator.activities.ManageGameplayActivity.TAG, 'selecting Fastest Answer')"];
  v3  [label="4:  com.seniordesign.wolfpack.quizinator.messages.Answer fastestCorrectAnswer = null"];
  v4  [label="5:  for (com.seniordesign.wolfpack.quizinator.messages.Answer answerI : answers)"];
  v5  [label="endfor"];
  v6  [label="6:  if (currentCard.getCorrectAnswer().equals(answerI.getAnswer()))"];
  v7  [label="7:  if ((fastestCorrectAnswer == null) || ((answerI.getTimeTaken()) < (fastestCorrectAnswer.getTimeTaken())))"];
  v8  [label="8:  if (fastestCorrectAnswer != null)"];
  v9  [label="9:  android.util.Log.d(com.seniordesign.wolfpack.quizinator.activities.ManageGameplayActivity.TAG, 'Setting Fastest Answer')"];
  v10  [label="10:  if ((currentCard.isDoubleEdge()) && (!(fastestCorrectAnswer.getAnswer().isEmpty())))"];
  v11  [label="11:  java.lang.String confirmation = gson.toJson(new com.seniordesign.wolfpack.quizinator.messages.Confirmation(fastestCorrectAnswer.getAddress(), false))"];
  v12  [label="12:  com.seniordesign.wolfpack.quizinator.wifiDirect.ConnectionService.sendMessage(com.seniordesign.wolfpack.quizinator.wifiDirect.MessageCodes.MSG_ANSWER_CONFIRMATION_ACTIVITY, confirmation)"];
  v13  [label="endif"];
  v14  [label="endif"];
  v15  [label="15:  fastestCorrectAnswer = answerI"];
  v16  [label="endif"];
  v17  [label="17:  if ((currentCard.isDoubleEdge()) && (!(answerI.getAnswer().isEmpty())))"];
  v18  [label="18:  java.lang.String confirmation = gson.toJson(new com.seniordesign.wolfpack.quizinator.messages.Confirmation(answerI.getAddress(), false))"];
  v19  [label="19:  com.seniordesign.wolfpack.quizinator.wifiDirect.ConnectionService.sendMessage(com.seniordesign.wolfpack.quizinator.wifiDirect.MessageCodes.MSG_ANSWER_CONFIRMATION_ACTIVITY, confirmation)"];
  v20  [label="endif"];
  v21  [label="endif"];
  v22  [label="23:  if ((currentCard.isDoubleEdge()) && (!(answerI.getAnswer().isEmpty())))"];
  v23  [label="24:  java.lang.String confirmation = gson.toJson(new com.seniordesign.wolfpack.quizinator.messages.Confirmation(answerI.getAddress(), false))"];
  v24  [label="25:  com.seniordesign.wolfpack.quizinator.wifiDirect.ConnectionService.sendMessage(com.seniordesign.wolfpack.quizinator.wifiDirect.MessageCodes.MSG_ANSWER_CONFIRMATION_ACTIVITY, confirmation)"];
  v25  [label="endif"];
  v26  [label="29:  android.util.Log.d(com.seniordesign.wolfpack.quizinator.activities.ManageGameplayActivity.TAG, 'Found Fastest Answer')"];
  v27  [label="30:  if (fastestCorrectAnswer != null)"];
  v28  [label="31:  android.util.Log.d(com.seniordesign.wolfpack.quizinator.activities.ManageGameplayActivity.TAG, 'Sending Message To Fastest Answer')"];
  v29  [label="32:  java.lang.String confirmation = gson.toJson(new com.seniordesign.wolfpack.quizinator.messages.Confirmation(fastestCorrectAnswer.getAddress(), true))"];
  v30  [label="33:  com.seniordesign.wolfpack.quizinator.wifiDirect.ConnectionService.sendMessage(com.seniordesign.wolfpack.quizinator.wifiDirect.MessageCodes.MSG_ANSWER_CONFIRMATION_ACTIVITY, confirmation)"];
  v31  [label="endif"];
  v32  [label="35:  answers = new java.util.ArrayList<>()"];
  v33  [label="36:  return fastestCorrectAnswer == null ? -1 : fastestCorrectAnswer.getTimeTaken();"];
  // graph-edges
  v1 -> v2  [arrowhead=empty, color=gray, style=dashed, label=""];
  v2 -> v3  [arrowhead=empty, color=gray, style=dashed, label=""];
  v3 -> v4  [arrowhead=empty, color=gray, style=dashed, label=""];
  v4 -> v5  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v4 -> v6  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v6 -> v7  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v7 -> v8  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v8 -> v9  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v9 -> v10  [arrowhead=empty, color=gray, style=dashed, label=""];
  v10 -> v11  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v11 -> v12  [arrowhead=empty, color=gray, style=dashed, label=""];
  v12 -> v13  [arrowhead=empty, color=gray, style=dashed, label=""];
  v10 -> v13  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v13 -> v14  [arrowhead=empty, color=gray, style=dashed, label=""];
  v8 -> v14  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v14 -> v15  [arrowhead=empty, color=gray, style=dashed, label=""];
  v15 -> v16  [arrowhead=empty, color=gray, style=dashed, label=""];
  v7 -> v17  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v17 -> v18  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v18 -> v19  [arrowhead=empty, color=gray, style=dashed, label=""];
  v19 -> v20  [arrowhead=empty, color=gray, style=dashed, label=""];
  v17 -> v20  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v20 -> v16  [arrowhead=empty, color=gray, style=dashed, label=""];
  v16 -> v21  [arrowhead=empty, color=gray, style=dashed, label=""];
  v6 -> v22  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v22 -> v23  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v23 -> v24  [arrowhead=empty, color=gray, style=dashed, label=""];
  v24 -> v25  [arrowhead=empty, color=gray, style=dashed, label=""];
  v22 -> v25  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v25 -> v21  [arrowhead=empty, color=gray, style=dashed, label=""];
  v21 -> v4  [arrowhead=empty, color=gray, style=dashed, label=""];
  v5 -> v26  [arrowhead=empty, color=gray, style=dashed, label=""];
  v26 -> v27  [arrowhead=empty, color=gray, style=dashed, label=""];
  v27 -> v28  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v28 -> v29  [arrowhead=empty, color=gray, style=dashed, label=""];
  v29 -> v30  [arrowhead=empty, color=gray, style=dashed, label=""];
  v30 -> v31  [arrowhead=empty, color=gray, style=dashed, label=""];
  v27 -> v31  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v31 -> v32  [arrowhead=empty, color=gray, style=dashed, label=""];
  v32 -> v33  [arrowhead=empty, color=gray, style=dashed, label=""];
   v3 -> v7   [style=bold, label=" (fastestCorrectAnswer)"];
   v3 -> v8   [style=bold, label=" (fastestCorrectAnswer)"];
   v3 -> v10   [style=bold, label=" (fastestCorrectAnswer)"];
   v3 -> v11   [style=bold, label=" (fastestCorrectAnswer)"];
   v3 -> v27   [style=bold, label=" (fastestCorrectAnswer)"];
   v3 -> v33   [style=bold, label=" (fastestCorrectAnswer)"];
   v3 -> v29   [style=bold, label=" (fastestCorrectAnswer)"];
   v4 -> v6   [style=bold, label=" (answerI)"];
   v4 -> v22   [style=bold, label=" (answerI)"];
   v4 -> v23   [style=bold, label=" (answerI)"];
   v4 -> v7   [style=bold, label=" (answerI)"];
   v4 -> v17   [style=bold, label=" (answerI)"];
   v4 -> v18   [style=bold, label=" (answerI)"];
   v4 -> v15   [style=bold, label=" (answerI)"];
   v23 -> v24   [style=bold, label=" (confirmation)"];
   v18 -> v19   [style=bold, label=" (confirmation)"];
   v15 -> v7   [style=bold, label=" (fastestCorrectAnswer)"];
   v15 -> v8   [style=bold, label=" (fastestCorrectAnswer)"];
   v15 -> v10   [style=bold, label=" (fastestCorrectAnswer)"];
   v15 -> v11   [style=bold, label=" (fastestCorrectAnswer)"];
   v15 -> v27   [style=bold, label=" (fastestCorrectAnswer)"];
   v15 -> v33   [style=bold, label=" (fastestCorrectAnswer)"];
   v15 -> v29   [style=bold, label=" (fastestCorrectAnswer)"];
   v11 -> v12   [style=bold, label=" (confirmation)"];
   v29 -> v30   [style=bold, label=" (confirmation)"];
  // end-of-graph
}
