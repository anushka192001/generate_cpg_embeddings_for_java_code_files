digraph 2105_before_PDG_DATA {
  // graph-vertices
  v1  [label="3:  void serialEvent(test.SerialPortEvent oEvent)"];
  v2  [label="4:  java.lang.String temp"];
  v3  [label="5:  if ((oEvent.getEventType()) == (SerialPortEvent.DATA_AVAILABLE))"];
  v4  [label="6:  try"];
  v5  [label="end-try"];
  v6  [label="7:  temp = serialInput.readLine()"];
  v7  [label="8:  java.lang.System.out.println(temp)"];
  v8  [label="9:  int index = temp.indexOf('.')"];
  v9  [label="10:  tag = temp.substring((index + 1))"];
  v10  [label="11:  if (transferPage1)"];
  v11  [label="12:  test.IndexCursor cursor = test.CursorBuilder.createCursor(gatorTable.getIndex('TagIndex'))"];
  v12  [label="13:  cursor.beforeFirst()"];
  v13  [label="14:  test.Row latestRow = null"];
  v14  [label="15:  while (cursor.findNextRow(java.util.Collections.singletonMap('Tag Number', tag)))"];
  v15  [label="endwhile"];
  v16  [label="16:  test.Row row = cursor.getCurrentRow()"];
  v17  [label="17:  if (row != null)"];
  v18  [label="18:  latestRow = row"];
  v19  [label="endif"];
  v20  [label="21:  if (latestRow != null)"];
  v21  [label="22:  previousRow = latestRow"];
  v22  [label="endif"];
  v23  [label="24:  previousRow = null"];
  v24  [label="26:  transferPage1 = false"];
  v25  [label="27:  transferPage2 = true"];
  v26  [label="28:  addComponents()"];
  v27  [label="endif"];
  v28  [label="30:  if (harvestPage1)"];
  v29  [label="31:  test.IndexCursor cursor = test.CursorBuilder.createCursor(gatorTable.getIndex('TagIndex'))"];
  v30  [label="32:  cursor.beforeFirst()"];
  v31  [label="33:  test.Row latestRow = null"];
  v32  [label="34:  while (cursor.findNextRow(java.util.Collections.singletonMap('Tag Number', tag)))"];
  v33  [label="endwhile"];
  v34  [label="35:  test.Row row = cursor.getCurrentRow()"];
  v35  [label="36:  if (row != null)"];
  v36  [label="37:  latestRow = row"];
  v37  [label="endif"];
  v38  [label="40:  if (latestRow != null)"];
  v39  [label="41:  previousRow = latestRow"];
  v40  [label="endif"];
  v41  [label="43:  previousRow = null"];
  v42  [label="45:  harvestPage1 = false"];
  v43  [label="46:  harvestPage2 = true"];
  v44  [label="47:  addComponents()"];
  v45  [label="endif"];
  v46  [label="49:  if (newGatorPage1)"];
  v47  [label="50:  newGatorPage1 = false"];
  v48  [label="51:  newGatorPage2 = true"];
  v49  [label="52:  addComponents()"];
  v50  [label="endif"];
  v51  [label="end-catch"];
  v52  [label="56:  catch (java.lang.Exception e)"];
  v53  [label="57:  java.lang.System.err.println(e.toString())"];
  v54  [label="endif"];
  // graph-edges
  v1 -> v2  [arrowhead=empty, color=gray, style=dashed, label=""];
  v2 -> v3  [arrowhead=empty, color=gray, style=dashed, label=""];
  v3 -> v4  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v4 -> v6  [arrowhead=empty, color=gray, style=dashed, label=""];
  v6 -> v7  [arrowhead=empty, color=gray, style=dashed, label=""];
  v7 -> v8  [arrowhead=empty, color=gray, style=dashed, label=""];
  v8 -> v9  [arrowhead=empty, color=gray, style=dashed, label=""];
  v9 -> v10  [arrowhead=empty, color=gray, style=dashed, label=""];
  v10 -> v11  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v11 -> v12  [arrowhead=empty, color=gray, style=dashed, label=""];
  v12 -> v13  [arrowhead=empty, color=gray, style=dashed, label=""];
  v13 -> v14  [arrowhead=empty, color=gray, style=dashed, label=""];
  v14 -> v15  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v14 -> v16  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v16 -> v17  [arrowhead=empty, color=gray, style=dashed, label=""];
  v17 -> v18  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v18 -> v19  [arrowhead=empty, color=gray, style=dashed, label=""];
  v17 -> v19  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v19 -> v14  [arrowhead=empty, color=gray, style=dashed, label=""];
  v15 -> v20  [arrowhead=empty, color=gray, style=dashed, label=""];
  v20 -> v21  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v21 -> v22  [arrowhead=empty, color=gray, style=dashed, label=""];
  v20 -> v23  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v23 -> v22  [arrowhead=empty, color=gray, style=dashed, label=""];
  v22 -> v24  [arrowhead=empty, color=gray, style=dashed, label=""];
  v24 -> v25  [arrowhead=empty, color=gray, style=dashed, label=""];
  v25 -> v26  [arrowhead=empty, color=gray, style=dashed, label=""];
  v26 -> v27  [arrowhead=empty, color=gray, style=dashed, label=""];
  v10 -> v28  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v28 -> v29  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v29 -> v30  [arrowhead=empty, color=gray, style=dashed, label=""];
  v30 -> v31  [arrowhead=empty, color=gray, style=dashed, label=""];
  v31 -> v32  [arrowhead=empty, color=gray, style=dashed, label=""];
  v32 -> v33  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v32 -> v34  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v34 -> v35  [arrowhead=empty, color=gray, style=dashed, label=""];
  v35 -> v36  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v36 -> v37  [arrowhead=empty, color=gray, style=dashed, label=""];
  v35 -> v37  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v37 -> v32  [arrowhead=empty, color=gray, style=dashed, label=""];
  v33 -> v38  [arrowhead=empty, color=gray, style=dashed, label=""];
  v38 -> v39  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v39 -> v40  [arrowhead=empty, color=gray, style=dashed, label=""];
  v38 -> v41  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v41 -> v40  [arrowhead=empty, color=gray, style=dashed, label=""];
  v40 -> v42  [arrowhead=empty, color=gray, style=dashed, label=""];
  v42 -> v43  [arrowhead=empty, color=gray, style=dashed, label=""];
  v43 -> v44  [arrowhead=empty, color=gray, style=dashed, label=""];
  v44 -> v45  [arrowhead=empty, color=gray, style=dashed, label=""];
  v28 -> v46  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v46 -> v47  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v47 -> v48  [arrowhead=empty, color=gray, style=dashed, label=""];
  v48 -> v49  [arrowhead=empty, color=gray, style=dashed, label=""];
  v49 -> v50  [arrowhead=empty, color=gray, style=dashed, label=""];
  v46 -> v50  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v50 -> v45  [arrowhead=empty, color=gray, style=dashed, label=""];
  v45 -> v27  [arrowhead=empty, color=gray, style=dashed, label=""];
  v27 -> v5  [arrowhead=empty, color=gray, style=dashed, label=""];
  v5 -> v52  [arrowhead=empty, color=gray, style=dashed, label="Throws"];
  v52 -> v53  [arrowhead=empty, color=gray, style=dashed, label=""];
  v53 -> v51  [arrowhead=empty, color=gray, style=dashed, label=""];
  v51 -> v5  [arrowhead=empty, color=gray, style=dashed, label=""];
  v5 -> v54  [arrowhead=empty, color=gray, style=dashed, label=""];
  v3 -> v54  [arrowhead=empty, color=gray, style=dashed, label="False"];
   v1 -> v3   [style=bold, label=" (oEvent)"];
   v6 -> v7   [style=bold, label=" (temp)"];
   v6 -> v8   [style=bold, label=" (temp)"];
   v6 -> v9   [style=bold, label=" (temp)"];
   v8 -> v9   [style=bold, label=" (index)"];
   v52 -> v53   [style=bold, label=" (e)"];
   v29 -> v30   [style=bold, label=" (cursor)"];
   v29 -> v32   [style=bold, label=" (cursor)"];
   v29 -> v34   [style=bold, label=" (cursor)"];
   v31 -> v38   [style=bold, label=" (latestRow)"];
   v31 -> v39   [style=bold, label=" (latestRow)"];
   v34 -> v35   [style=bold, label=" (row)"];
   v34 -> v36   [style=bold, label=" (row)"];
   v36 -> v38   [style=bold, label=" (latestRow)"];
   v36 -> v39   [style=bold, label=" (latestRow)"];
   v11 -> v12   [style=bold, label=" (cursor)"];
   v11 -> v14   [style=bold, label=" (cursor)"];
   v11 -> v16   [style=bold, label=" (cursor)"];
   v13 -> v20   [style=bold, label=" (latestRow)"];
   v13 -> v21   [style=bold, label=" (latestRow)"];
   v16 -> v17   [style=bold, label=" (row)"];
   v16 -> v18   [style=bold, label=" (row)"];
   v18 -> v20   [style=bold, label=" (latestRow)"];
   v18 -> v21   [style=bold, label=" (latestRow)"];
  // end-of-graph
}
