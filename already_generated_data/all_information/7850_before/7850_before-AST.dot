digraph 7850_before_AST {
  // graph-vertices
  n1  [label="ROOT: 7850_before.java"];
  n2  [label="CLASS"];
  n3  [label="MODIFIER: public"];
  n4  [label="NAME: Activeuse"];
  n5  [label="METHOD"];
  n6  [label="MODIFIER: @java.lang.Override public"];
  n7  [label="RETURN: net.minecraft.item.ItemStack"];
  n8  [label="NAME: activeUse"];
  n9  [label="PARAMS"];
  n10  [label="VAR"];
  n11  [label="TYPE: net.minecraft.item.ItemStack"];
  n12  [label="NAME: stackIn"];
  n13  [label="VAR"];
  n14  [label="TYPE: net.minecraft.world.World"];
  n15  [label="NAME: world"];
  n16  [label="VAR"];
  n17  [label="TYPE: net.minecraft.entity.player.EntityPlayer"];
  n18  [label="NAME: player"];
  n19  [label="VAR"];
  n20  [label="TYPE: net.minecraft.util.EnumHand"];
  n21  [label="NAME: hand"];
  n22  [label="VAR"];
  n23  [label="TYPE: int"];
  n24  [label="NAME: strength"];
  n25  [label="BLOCK"];
  n26  [label="VAR"];
  n27  [label="TYPE: net.minecraft.util.math.RayTraceResult"];
  n28  [label="NAME: result"];
  n29  [label="INIT: = player.rayTrace(10, 1)"];
  n30  [label="VAR"];
  n31  [label="TYPE: net.minecraft.entity.Entity"];
  n32  [label="NAME: target"];
  n33  [label="INIT: = result.entityHit"];
  n34  [label="VAR"];
  n35  [label="TYPE: net.minecraft.entity.passive.EntityVillager"];
  n36  [label="NAME: villager"];
  n37  [label="INIT: = new net.minecraft.entity.passive.EntityVillager(world)"];
  n38  [label="IF"];
  n39  [label="COND: target instanceof net.minecraft.entity.monster.EntityZombie"];
  n40  [label="THEN"];
  n41  [label="8:  java.lang.System.out.println('Hit the if *******************')"];
  n42  [label="10:  return super.activeUse(stackIn, world, player, hand, strength);"];
  // graph-edges
  n1 -> n2;
  n2 -> n3;
  n2 -> n4;
  n2 -> n5;
  n5 -> n6;
  n5 -> n7;
  n5 -> n8;
  n5 -> n9;
  n9 -> n10;
  n10 -> n11;
  n10 -> n12;
  n9 -> n13;
  n13 -> n14;
  n13 -> n15;
  n9 -> n16;
  n16 -> n17;
  n16 -> n18;
  n9 -> n19;
  n19 -> n20;
  n19 -> n21;
  n9 -> n22;
  n22 -> n23;
  n22 -> n24;
  n5 -> n25;
  n25 -> n26;
  n26 -> n27;
  n26 -> n28;
  n26 -> n29;
  n25 -> n30;
  n30 -> n31;
  n30 -> n32;
  n30 -> n33;
  n25 -> n34;
  n34 -> n35;
  n34 -> n36;
  n34 -> n37;
  n25 -> n38;
  n38 -> n39;
  n38 -> n40;
  n40 -> n41;
  n25 -> n42;
  // end-of-graph
}
